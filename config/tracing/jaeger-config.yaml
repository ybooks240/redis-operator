apiVersion: v1
kind: ConfigMap
metadata:
  name: jaeger-config
  namespace: redis-operator-system
  labels:
    app: jaeger
data:
  jaeger.yaml: |
    # Jaeger 配置文件
    service_name: redis-operator
    
    # 采样配置
    sampler:
      type: probabilistic
      param: 0.1  # 10% 采样率
    
    # 报告配置
    reporter:
      log_spans: true
      buffer_flush_interval: 1s
      queue_size: 100
      local_agent_host_port: jaeger-agent:6831
    
    # 标签配置
    tags:
      - key: cluster
        value: ${CLUSTER_NAME:redis-operator-cluster}
      - key: environment
        value: ${ENVIRONMENT:production}
      - key: version
        value: ${VERSION:latest}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger-all-in-one
  namespace: redis-operator-system
  labels:
    app: jaeger
    component: all-in-one
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaeger
      component: all-in-one
  template:
    metadata:
      labels:
        app: jaeger
        component: all-in-one
    spec:
      containers:
      - name: jaeger
        image: jaegertracing/all-in-one:1.50
        ports:
        - containerPort: 16686
          protocol: TCP
          name: query-http
        - containerPort: 14268
          protocol: TCP
          name: collector
        - containerPort: 6831
          protocol: UDP
          name: agent-compact
        - containerPort: 6832
          protocol: UDP
          name: agent-binary
        - containerPort: 5778
          protocol: TCP
          name: agent-config
        - containerPort: 14250
          protocol: TCP
          name: grpc
        env:
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: ":9411"
        - name: SPAN_STORAGE_TYPE
          value: "memory"
        - name: QUERY_BASE_PATH
          value: "/jaeger"
        resources:
          limits:
            memory: 400Mi
            cpu: 200m
          requests:
            memory: 200Mi
            cpu: 100m
        readinessProbe:
          httpGet:
            path: /
            port: 16686
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 16686
          initialDelaySeconds: 30
          periodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-query
  namespace: redis-operator-system
  labels:
    app: jaeger
    component: query
spec:
  ports:
  - name: query-http
    port: 16686
    protocol: TCP
    targetPort: 16686
  selector:
    app: jaeger
    component: all-in-one
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-collector
  namespace: redis-operator-system
  labels:
    app: jaeger
    component: collector
spec:
  ports:
  - name: jaeger-collector-tchannel
    port: 14267
    protocol: TCP
    targetPort: 14267
  - name: jaeger-collector-http
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: jaeger-collector-grpc
    port: 14250
    protocol: TCP
    targetPort: 14250
  - name: jaeger-collector-zipkin
    port: 9411
    protocol: TCP
    targetPort: 9411
  selector:
    app: jaeger
    component: all-in-one
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-agent
  namespace: redis-operator-system
  labels:
    app: jaeger
    component: agent
spec:
  ports:
  - name: agent-zipkin-thrift
    port: 5775
    protocol: UDP
    targetPort: 5775
  - name: agent-compact
    port: 6831
    protocol: UDP
    targetPort: 6831
  - name: agent-binary
    port: 6832
    protocol: UDP
    targetPort: 6832
  - name: agent-configs
    port: 5778
    protocol: TCP
    targetPort: 5778
  clusterIP: None
  selector:
    app: jaeger
    component: all-in-one

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jaeger-query
  namespace: redis-operator-system
  labels:
    app: jaeger
    component: query
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - host: jaeger.redis-operator.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: jaeger-query
            port:
              number: 16686

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jaeger-sampling-config
  namespace: redis-operator-system
  labels:
    app: jaeger
data:
  sampling_strategies.json: |
    {
      "service_strategies": [
        {
          "service": "redis-operator",
          "type": "probabilistic",
          "param": 0.5,
          "operation_strategies": [
            {
              "operation": "Reconcile",
              "type": "probabilistic",
              "param": 1.0
            },
            {
              "operation": "StatusUpdate",
              "type": "probabilistic",
              "param": 0.1
            }
          ]
        },
        {
          "service": "redis-instance",
          "type": "probabilistic",
          "param": 0.1
        },
        {
          "service": "redis-sentinel",
          "type": "probabilistic",
          "param": 0.3
        },
        {
          "service": "redis-cluster",
          "type": "probabilistic",
          "param": 0.2
        }
      ],
      "default_strategy": {
        "type": "probabilistic",
        "param": 0.1
      },
      "per_operation_strategies": [
        {
          "operation": "GET",
          "type": "probabilistic",
          "param": 0.01
        },
        {
          "operation": "SET",
          "type": "probabilistic",
          "param": 0.05
        },
        {
          "operation": "DELETE",
          "type": "probabilistic",
          "param": 0.1
        }
      ]
    }